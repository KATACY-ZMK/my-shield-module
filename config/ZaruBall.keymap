//#include <dt-bindings/zmk/mouse.h>

#include <behaviors/rgbled_widget.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3
#define MOUSE 4
#define SCROLL 1

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

/ {
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mt LALT LANG2>, <&mo 2>, <&mo 0>;
        };

        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mt RCTL LANG1>, <&mo 2>, <&mo 0>;
        };
    };
};

&sl { release-after-ms = <250>; }; // time needed for double click (for mkp_exit_AML)
/ {
    macros {
        // When in AML, move to default layer when key (except mouse button) pressed

        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_layer_0";
        };

        // When LCLK pressed, exit AML (after 250ms cause by sticky layer)

        mkp_exit_AML: mkp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&sl 0>;

            label = "MKP_EXIT_AML";
        };

        // Support swapping into Scroll layer when AML is activated

        to_scroll_layer: to_scroll_layer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&to 1>,
                <&macro_press>,
                <&mo 1>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 1>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        base_layer {
            display-name = "Base";
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            bindings = <
&kp ESC       &kp N1  &kp N2  &kp N3        &kp N4    &kp N5                        &kp NUMBER_6         &kp N7     &kp N8  &kp N9     &kp N0   &kp EQUAL
&kp TAB       &kp Q   &kp W   &kp E         &kp R     &kp T                         &kp Y                &kp U      &kp I   &kp O      &kp P    &kp MINUS
&kp LEFT_WIN  &kp A   &kp S   &kp D         &kp F     &kp G     &mo 2               &mo 3                &kp H      &kp J   &kp K      &kp L    &kp SEMI   &kp ENTER
&kp LSHFT     &kp Z   &kp X   &kp C         &kp V     &kp B     &lt 2 LEFT_BRACKET  &lt 3 RIGHT_BRACKET  &kp N      &kp M   &kp COMMA  &kp DOT  &kp FSLH   &lt 1 BACKSLASH
&kp RCTRL             &mo 1   &kp LEFT_ALT  &mkp MB1  &mkp MB2  &mo 1               &kp BACKSPACE        &kp SPACE                              &lt 2 SQT
            >;
        };

        lower_layer {
            display-name = "Lower";
            sensor-bindings = <&inc_dec_kp LC(LG(PAGE_DOWN)) LC(LG(PAGE_UP))>;
            bindings = <
&trans  &kp F1          &kp F2     &kp F3    &kp F4            &kp F5                          &kp LA(F2)  &kp KP_N7       &kp KP_N8     &kp KP_N9       &kp KP_SLASH     &kp KP_NUMLOCK
&trans  &kp F6          &kp F7     &kp F8    &mkp MB3          &kp F10                         &kp LA(F1)  &bt BT_CLR_ALL  &kp UP_ARROW  &bt BT_SEL 1    &kp KP_MULTIPLY  &none
&trans  &kp F11         &kp F12    &kp UP    &to_scroll_layer  &kp HOME  &kp PG_UP             &kp LPAR    &kp C_VOL_UP    &kp LEFT      &kp DOWN_ARROW  &kp RIGHT        &kp KP_MINUS    &none
&trans  &studio_unlock  &kp LEFT   &kp DOWN  &kp RIGHT         &kp END   &kp LEFT_PARENTHESIS  &kp RPAR    &kp C_VOL_DN    &bt BT_CLR    &kp KP_N0       &kp KP_EQUAL     &kp KP_PLUS     &none
&trans                  &kp RSHFT  &trans    &trans            &trans    &trans                &trans      &kp DEL                                                        &studio_unlock
            >;
        };

        raise_layer {
            display-name = "Raise";
            sensor-bindings = <&inc_dec_kp LC(PAGE_DOWN) LC(PAGE_UP)>;
            bindings = <
&trans  &none  &none  &none      &none             &none                            &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4    &none
&trans  &none  &none  &none      &none             &none                            &none         &none         &kp UP_ARROW  &none           &bt BT_CLR_ALL  &bt BT_CLR
&trans  &none  &none  &mkp RCLK  &to_scroll_layer  &msc SCRL_UP    &msc SCRL_LEFT   &kp PG_UP     &kp HOME      &kp LEFT      &kp DOWN_ARROW  &kp RIGHT       &bt BT_PRV  &bt BT_NXT
&trans  &none  &none  &mkp MB4   &mkp MB5          &msc SCRL_DOWN  &msc SCRL_RIGHT  &kp PG_DN     &kp END       &kp LEFT      &kp DOWN        &kp RIGHT       &none       &none
&trans         &none  &trans     &trans            &trans          &trans           &trans        &kp DEL                                                     &trans
            >;
        };

        adjust_layer {
            display-name = "Adjust";
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4          &bt BT_CLR_ALL  &none           &none  &none  &none  &none
&trans  &none         &none         &none         &none         &none                 &bt BT_CLR      &none           &none  &none  &none  &none
&trans  &none         &none         &none         &none         &none         &none   &none           &out OUT_TOG    &none  &none  &none  &none   &none
&trans  &none         &none         &none         &none         &none         &none   &none           &studio_unlock  &none  &none  &none  &none   &none
&trans                &kp C_MUTE    &trans        &trans        &trans        &trans  &trans          &kp DEL                              &trans
            >;
        };

        // Extra layer can be added in ZMK STUDIO

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp A   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp B   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp C   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };
    };
};
